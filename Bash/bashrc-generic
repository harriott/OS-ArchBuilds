# vim: ft=sh sw=2:

# Joseph Harriott

# Bash configurations that are also useful in Console and as root.

# $OSAB/Bash/bashrc-generic  symlinked in  $bSc/symlinks/jo-0.sh
# for jo:
#  sourced by  $Bash/bash_profile  &  $Bash/bashrc
# for root:
#  sourced by  $OSAB/root/bashrc

alias fin='figlet -f univers finished'
alias tkt='tmux kill-server > /dev/null 2>&1; tmux'

[ $TERM != 'screen-256color' ] && [ $(logname) == $(whoami) ] && neofetch
# - won't run in  tmux  or after  su

export loaded_bg=1  # used in  $OSAB/bs-symlinks/repair.sh

ft () {
  if [ "$1" ]; then
    of=$ulLB/FIGletFontsTest.txt
    echo "$1" > $of; echo '' >> $of
    for font in big doh doom isometric1 isometric2 larry3d nancyj-fancy nancyj nancyj-underlined ogre poison puffy radical_ rowancap shadow standard starwars stellar stop straight tombstone trashman ttyb tty univers usaflag utopia xbriteb xttyb; do
      figlet -t -f $font -w 250 "$1" >> $of
      echo "- $font" >> $of
    done
    sed -i 's/ \+$//' $of
    echo "results are in $of"
  else
    echo "ft 'some text'"
  fi
}

se () {
  echo -n "${tpf2}aliases:${tpfn}  "; compgen -a | awk '{print}' ORS=' : '; echo ''
  echo -n "${tpf2}builtins:${tpfn} "; compgen -b | awk '{print}' ORS=' : '; echo ''
  echo -n "${tpf2}commands:${tpfn} "; compgen -c | awk '{print}' ORS=' : '; echo ''
}
seg () {
  e=$machLg/jo/environment.txt
  echo 'vim: ft=build:' > $e
  echo '' >> $e
  echo "# commands" >> $e
  compgen -c | awk '{print}' ORS=' : ' >> $e
  echo '' >> $e
}

#=> awesome or Openbox on a machine
startxa () { ln -sf $ABjo/xinitrcs/awesome ~/.xinitrc; }
startxo () { ln -sf $ABjo/xinitrcs/openbox ~/.xinitrc; }

#=> better file managing
alias e='exa --icons'
  alias a='e -aF'  # grid, handily showing up symlinks
  alias er='e -alR'  # show permissions and symlinks recursively
  alias et='e -T'  # for tree
alias l='ls --color=auto'
alias mo='moar'
alias s="stat -c '%A %a %h %U %G %s %y %n'"
alias so="stat -c '%a %n'"  # octal rights
alias sm="stat -c '%y %n'"  # modification time
export PAGER=less
shopt -s autocd dotglob extglob globstar nullglob

c() { if [ -n "$1" ]; then cd "$1" || return 1; else cd ..; fi; l -a; }
# - https://superuser.com/a/1244522/242800

cft(){
  find . -path './.git' -prune -o -type f -name "*" | rev | cut -d . -f1 | rev | sort | uniq -ic | sort -rn''
} # count filetypes

if [ -s "/usr/bin/broot" ]; then
    # generalised from what broot added to .bashrc:
    source ~/.config/broot/launcher/bash/br
fi # configures broot

if [ -s "/usr/share/fzf" ]; then
  # alias f="fzf --preview 'bat --color=always {} | head -500'"
  alias f="fzf --preview 'bat --color=always {}'"
  export FZF_DEFAULT_COMMAND='fd --type f --hidden --follow --exclude .git --no-ignore'
  export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"
  source /usr/share/fzf/key-bindings.bash
  source /usr/share/fzf/completion.bash
fi

locd () {
    locate -0 -b -A "$@" | xargs -0 -I {} bash -c '[ -d "{}" ] && echo "{}"'
} # directories

r () {
  [ $TERM != 'screen-256color' ] && pi="--cmd='set preview_images true'"
  eval "ranger --choosedir=$HOME/Arch/ranger_last_visited $pi $@"
  cd "$(cat /home/jo/Arch/ranger_last_visited)"
}  # r "$Drpbx/CAM-best/Classic Yo-Yo"

up(){
  local dir=""
  uplimit=$1
  for ((upshift=1 ; upshift <= uplimit ; upshift++)); do dir=$dir/..; done
  dir=$(echo $dir | sed 's/^\///')
  if [ -z "$dir" ]; then dir=..; fi
  cd $dir
} # move up [n] directories

#==> bat
alias b='bat'  # syntax highlit cat
alias bd='bat -d'  # showing changes from git index
alias bm='batman'  # better manual (in wide enough terminal)
alias pb='prettybat'  # tidied code
export BAT_PAGER=less

#==> system monitoring
alias bt='bashtop'
alias gl='glances'

#==> virtualenvwrapper
export WORKON_HOME=~/.virtualenvs  # $WORKON_HOME
[[ -f /usr/bin/virtualenvwrapper.sh ]] && source /usr/bin/virtualenvwrapper_lazy.sh

#=> clamscan 0 preferred log basename
# cslbn=$clamscan/clamscan
if [ $myDrA ]; then
  cslLocation=$machLg
else
  cslLocation=/home/jo/Arch
fi
cslbn=$cslLocation/clamscan

#=> clamscan 1 scan
scs () {
  echo "about to clamscan /"
  sudo clamscan -r --exclude-dir='/media|/mnt|/sys' / 2>&1 | tee $cslbn.log
  sudo chown jo:jo $cslbn.log
}  # end of log shows time taken

#=> clamscan 2 filter the results
# $vimfiles/syntax/cslF.vim

csF () {
  if [ $1 ]; then
    cslFbn=$cslbn"-$1-FOUND"
      cslF="$cslFbn.log"
    if [ $2 ]; then
      # filter down to some remaining threats - might not catch all
      cslFt="$cslFbn-threats.log"
      if [ -f $cslF ]; then
        cp $cslF $cslFt
        sed -i '/Heuristics.Phishing.Email.SpoofedDomain\|Sanesecurity\|Urlhaus/!d' $cslFt
        sed -i '1s/^/vim: ft=cslF:\n\n/' $cslFt
        echo "- possible threats are now listed in ${tpf7}$cslFt${tpfn}"
      else
        echo "$cslF  ain't there"
      fi
    else
      # make clamscanFOUND log file - should be enough
      cp $cslbn.log $cslF
      sed -i '/ FOUND$/!d' $cslF
      sed -i 's/ FOUND$//' $cslF
      sed -i '1s/^/vim: ft=cslF:\n\n/' $cslF
      echo "- now look in ${tpf7}$cslF${tpfn}"
    fi
  else
    echo "- need a datecode"
  fi
}  # make clamscanFOUND log file - should be enough

#=> colours
source $OSAB/Bash/xcol.sh

#==> tput foreground
# inspired by nachoparker
export tpfn=$'\e[0m' # normal
export tpfb=$(tput bold)

#===> bold colours
export tpf0b="$tpfb$tpf0" # bold black
export tpf1b="$tpfb$tpf1" # bold red
export tpf2b="$tpfb$tpf2" # bold green
export tpf3b="$tpfb$tpf3" # bold yellow
export tpf4b="$tpfb$tpf4" # bold blue
export tpf5b="$tpfb$tpf5" # bold magenta
export tpf6b="$tpfb$tpf6" # bold cyan
export tpf7b="$tpfb$tpf7" # bold white =  echo -e '\033[1;37m bold white \e[0m'
# echo "${tpf0b}black ${tpf1b}red ${tpf2b}green ${tpf3b}yellow ${tpf4b}blue ${tpf5b}magenta ${tpf6b}cyan ${tpf7b}white${tpfn}"

#===> normal colours
export tpf0=$(tput setaf 0) # black
export tpf1=$(tput setaf 1) # red
export tpf2=$(tput setaf 2) # green, slightly duller than  echo -e '\e[92m  green \e[0m'
export tpf3=$(tput setaf 3) # yellow
export tpf4=$(tput setaf 4) # blue
export tpf5=$(tput setaf 5) # magenta
export tpf6=$(tput setaf 6) # cyan
export tpf7=$(tput setaf 7) # white
# echo "${tpf0}black ${tpf1}red ${tpf2}green ${tpf3}yellow ${tpf4}blue ${tpf5}magenta ${tpf6}cyan ${tpf7}white${tpfn}"

#=> command history
alias h='history'
export HISTCONTROL=ignoreboth:erasedups
# export HISTIGNORE='?:??'  # one or two character commands
PROMPT_COMMAND='history -a' # store immediately (Samokovarov's  jump  later tweaks this)
shopt -s histappend

#=> f1t2t3
if [ $host = 'sbMb' ]; then
  alias f1t2t3="bash ~/Arch/f1t2t3/f1t2t3.sh"
fi

#=> internetish
alias p='ping -c 3 8.8.8.8'
alias pg='ping -c 3 -n google.com'
alias wp='curl wttr.in/Paris'  # weather

pqs () { pacman -Qs $1 | xcol $1; }  # or use  pacsearch

#=> turbostat
alias ts1='sudo turbostat --interval 2 --quiet'

ts2 () {
  if [ $TERM == 'linux' ]; then
    echo "not in a resizable window"  # Console
  elif [[ -n $TMUX ]]; then
    echo "now detach tmux and run ts2 again"
    export reattachTmux=ts2
  else
    export reattachTmux=
    tc=109 # columns needed for turbostat
    read rows cols < <( stty size )
    if (( $cols < $tc )); then
      resize -s $rows $tc
    else
      echo "columns already >= $tc"
      sleep 1
    fi
    tmux a
  fi  # tmux
} # widen terminal for turbostat

