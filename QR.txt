vim: ft=build nospell:

commands in this QuickReference work in my Arch install
 more generally, see $onGH/misc/linux/QR.txt

copyq help | mo
gspdfpng

# fcron
systemctl status fcron.service  # showing recent events

## fcrontab
VISUAL= fcrontab -e  # then make your changes

### spool directory
/var/spool/fcron

#### check the crontabs therein
systab.orig  # contains bootrun tabs to catch
sudo cat /var/spool/fcron/jo.orig

# file manage
bat <file>
diskus
dua [i]
e
MV(1)
pygmentize -h
rsync(1)

## advcpmv
cpg --help | mo  # man advcp
mvg --help | mo  # man advmv

## CliFM
$ARCHBUILDS/jo/CliFM/keybindings.clifm
clifm -v
i clifm

### commands
Q => quit to current directory - doesn't work...
shift+up => navigate up

#### selection
r sel => remove all
s i j n-m

## exa
e
e -l -s modified  # time sorted
e -la  # for permissions and symlinks
e -T   # for tree
i exa

## fd
im fd
fd -H -t l  # finds symlinks in current directory, broken ones distinguished
fd --max-depth 1 -H -t l  # finds symlinks in current directory, broken ones distinguished
fd --max-depth 2 -Hl -t l | xcol <keywords>  # handy for spotting snags
fd -d1 -td  # depth 1 (current dir), type dir
fd -e ods  # finds OpenOffice Calc spreadsheets
fd -H  # --hidden
fd -HI --changed-within 1h
fd -I  # --no-ignore => do not respect .(git|fd)ignore files
fd -I -e pdf  # finds pdf's when they're gitignored
sharkdp/fd

### git config's
fd -HI -tf ^config$ | xargs rg -l 'remote = gh'  # ripgrep
see  $Bash/bashrc-console

## ranger
feh $cIThul/cheatsheet.png &
r $ARCHBUILDS/jo/ranger  # my configurations
r $DROPBOX/JH/Cafezoide
ranger --version

### commands
? => start of help dialogue
I => rename
i => inspect file
shift+s => open subshell
c-h / zh => toggle hidden

## ripgrep
batgrep
i rg
outer whitespaces get ignored
rg --type-list

### searches
rg '\$cITh' -l
rg '\$ITstack'
rg '\$mail'
rg '\~/\.npm-'
rg '<someText>|<otherText>'
rg --no-ignore 'sometext'  # allows searching into gitignored places
rg -tmd '\$SE'
rg -tmd '\$Sig'
rg -tmd '\{TNW}'
rg -uu <someText>  # ignores ignore files, and searches in hidden stuff
rg <someText>  # searches recursively in files

#### in vimfiles
rg --no-ignore '\$MSwin10'
rg --no-ignore '\$onGH'
rg -tvim 'vimHints'

#### TeX files
rg -l -ttex '\\input' > rg-tex.txt
rg -l -ttex '\\parskip' > rg-tex.txt
rg -l -ttex verseSettings > rg-tex.txt
rg -ttex '\$Sig'
rg -ttex '\\includepdf'
rg -ttex '\\includegraphics'
rg -ttex '\\multirow\{'
rg -ttex '\\setdefaultlanguage'
rg -ttex '\\subsubsection\{'
rg -ttex '\{geometry}'
rg -ttex '{tabular}'
rg -ttex 'newcommand\{'
rg -ttex 'WLR'
rg -ttex '\\parindent'
rg -ttex -l --sort modified '\\includegraphics' > dts-tex-includegraphics.txt
rg -ttex ^%%

# Bash
im time
pinfo bash
pinfo -m bash

## broot
i broot

### commands
alt+enter => quit to current directory
alt+h => toggle hidden
ctrl+q [<enter>] => quit
F5 => refresh

### launch
br
br -c :count
br -d => br --dates => the last modified date
br -g => br --show-git-info
br -h => br --hidden
br -i => br --show-gitignored
br -p => br --permissions
br -s => br --sizes

## Ctrl+t
cd ctrl+t  # then fuzzy search for a file, hit enter, backspace to the file's directory, Enter
puts node selection onto command line

### Search syntax
Token    -  Match type                  -  Description
sbtrkt   -  fuzzy-match                 -  Items that match sbtrkt
'wild    -  exact-match (quoted)        -  Items that include wild
^music   -  prefix-exact-match          -  Items that start with music
.mp3$    -  suffix-exact-match          -  Items that end with .mp3
!fire    -  inverse-exact-match         -  Items that do not include fire
!^music  -  inverse-prefix-exact-match  -  Items that do not start with music
!.mp3$   -  inverse-suffix-exact-match  -  Items that do not end with .mp3

| OR

## directory structures
<directory>  # cd <directory>  ( shopt autocd )
file ~/.vim  # shows symlink source
namei ~/.vim  # shows tree, including symlink sources

### Samokovarov's jump
bm jump
j <fuzzysearch> [<FuzzyLook> ...]  then j for subsequent matches
jump clean  # I have in fcrontab
jump top | mo
jump --help

## file searching
as root: find / -xdev -iname "*fmtutil.cnf*"
find . -iregex '.*\.\(avi\|flv\|mkv\|mov\|mp4\|ogv\)$' > avfiles.txt
find . -type d -name .git
find . -type f -name .gitignore
find . -type f -name "*.pl"
find . -type f -name "python.vim"

### for configuration files
fd -I -e conf
find . -type f -name "*.conf"

### grepping
grep -E '<someText>|<otherText>'
grep -r --include "*.sh" ' -f ' .
grep -ri --exclude-dir *Copied* --include "*.tex" chapterstyle .
grep -ri --include "*.conf" '#=> ' .
man grep | grep egrep | xcol egrep fgrep

#### manual
GNU Grep Manual
GREP(1)

### mlocate
bm locate
locate -c <target>  # --count
locate -h
locate -r '\.conf$'
locate -r '\.desktop$' > $MACHINE/desktops.txt
locate -r '\.json$' | mo
locate -r 'gestion des cas'

#### updatedb
/etc/updatedb.conf
doas updatedb
systemctl status updatedb.timer

### list symlinks
find . -mindepth 1 -maxdepth 1 -type l -ls  # only in this directory

#### recursively
find . -type l -ls
find ~ -path '*/.virtualenvs' -prune -o -type l -ls

## fuzzy
find . -type f | fzy  # selecta

### fzf
<someCommand> Ctrl-t - gets the selected node on the command-line
Alt+c  # to change directory
bm fzf
cat $(fzf)
cd [directory/][fuzzy_pattern]**<tab>
f  # defined in  $ARCHBUILDS/Bash/bashrc-generic
FZF_DEFAULT_COMMAND
gvim -o `f`  # calling upon fzf
kill -9 <tab>
ls -l $(fzf -m)
unalias **<tab>

## pagers
mo <file>  # ? lists the limited moar commands

### less pager
less <file>

#### commands
h -> help
j,k -> down/up

# fonts
cd /usr/share/fonts; $ fd -L consolas
font-manager &

## Fontconfig
cd /etc/fonts  # to explore the configuration files
fc-list | grep Caskaydia
fc-list | grep Deja
fc-list | grep Lohit
fc-list | grep ubuntu
fc-list -v ubuntumono
fc-list > $MACHINE/fclist.txt
doas fc-cache -f  # regenerates the cache

### fc-scan
fc-scan /usr/share/fonts/ubuntu/UbuntuMono-R.ttf

In a folder of possible fonts, to check if any are already installed:
  for font in $(ls); do fc-list $font; done

## fontpreview
fontpreview -h
uses fzf

# fun
cat $CP/EMOJI_CHEAT_SHEET.gfm
tint  # tetris

## CMatrix
cmatrix -u 9 -C blue
man cmatrix

# help
apropos
cheat cheat

## pinfo
/etc/pinforc
i pinfo
see  $Bash/bashrc-console

### commands
quite a few don't work, and some crash the terminal...

#### commands that work
/       -> search
<space> -> PgDn
b       -> PgUp
f       -> next search term

## tealdeer
tldr -h
tldr -u
tldr tldr

# hw
cd /sys/devices/system/cpu/cpu0/cpufreq
HP ENVY 5532: d0:bf:9c:a2:2f:0e

## avio
/sys/class/backlight/intel_backlight/max_brightness

### graphics card details
doas cat /sys/kernel/debug/dri/0/radeon_pm_info
glxinfo > glxinfo
lspci -vnn | grep VGA -A 10 | xcol Intel size VGA
lspci -vnn | grep VGA -A 12 | xcol Radeon size VGA
sudo lshw -C display | xcol Radeon size VGA

## printing - CUPS - HP ENVY 5532 WiFi
lpoptions -d ENVY_5530  # set as default
lpoptions -d ENVY_5530_249  # set as default
lpoptions -p Envy5532 -o PageSize=A4
doas cupsenable ENVY_5530  # if it's paused

### see selected options
lpoptions -p ENVY_5530 -l | xcol '\*'
lpoptions -p ENVY_5532 -l | xcol '\*'  # see selected options

## printing - HPLIP - HP ENVY 5532 WiFi
hp-levels -p ENVY_5530
hp-levels -p ENVY_5532
hp-setup -b net 192.168.43.249  # when online
http://192.168.43.249/

## storage
/proc/filesystems - those supported by the kernel
CP(1)
gdu
GNU Parted
NCDU(1)

### mkfs.ext4
/etc/mke2fs.conf  has bytes-per-inode ratios for usage types

### non-optical
df -h | xcol mnt media
doas blkid -o list  # shows fs_type
doas file -s /dev/sdxn | xcol bit FAT

#### fsck
FSCK(8)
sudo umount /dev/sdxn  for  sudo fsck -MV /dev/sdxn

#### Trash
gio trash --empty  # empties all .Trash-1000
gio trash --list  # lists trash by locations

##### snags
rm -r .Trash-1000/info
sudo rm -r .Trash-1000/files/<something-thats-stuck>  # can take a while...

#### trash-cli
$Bash/bashrc-console
trash-empty  # lists before query

### optical
cdrecord dev=/dev/sr0 -checkdrive

#### burning
cdrecord -v -sao dev=/dev/sr0 isoimage.iso
growisofs

### rsnapshot
$MACHINE/etc/rsnapshot.conf
cd $rsnapshot
pgrep rsnapshot
snapshot_root
sudo du -sh $rsnapshot
sudo pkill rsnapshot
sm $rsnapshot/monthly.6

#### backup localhost without mnt
lastMonthly=/mnt/WD1001FALS/rsnapshot/monthly.6/localhost/; month=$(date -r $lastMonthly +%y%m%d); echo $month
sudo rsync -irtv --delete --progress --exclude=mnt $lastMonthly/ /mnt/WD30EZRZ/Archive/localhost-sbMb-$month

#### checking
/var/log/rsnapshot > completed successfully
e -l -s modified $rsnapshot
journalctl -r | grep rsnapshot | grep Consumed | xcol weekly monthly | mo
journalctl -u rsnapshot@daily -r
journalctl -u rsnapshot@hourly -r
systemctl status rsnapshot-hourly.timer

#### find
eval "find $rsnapshot/*/localhost/mnt/SDU3D1TB/Dropbox/JH/core/IT_stack/onGitHub/vimfiles/syntax -type f -name 'cmusq.vim' $printfDTsort"
eval "find $rsnapshot/*/localhost/mnt/SDU3D1TB/Dropbox/CAM-toSort0 -type f -name '*Apache*' $printfDTsort"
find $rsnapshot/*/localhost/mnt/SDU3D1TB/Dropbox/CAM-toSort0 -type f -name "01 *"

##### my OBS grabs
find $rsnapshot/*/localhost/home/jo/ -maxdepth 1 -type f -name "*.mkv"
find $rsnapshot/*/localhost/home/jo/ -maxdepth 1 -type f -name "Queen*.mkv" -exec rm -f {} \;
find $rsnapshot/*/localhost/home/jo/ -maxdepth 1 -type f -name "2022-*.mkv" -exec rm -f {} \;

#### quickly lists all instances of directories
for d in $(ls hourly.*/localhost/home/jo -dtr); do stat -c '%y %n' $d; done  # hourly instances in time order
ls *ly.*/localhost/home/jo/.config/copyq -d  # CopyQ data directory instances
ls *ly.*/localhost/mnt/*/S* -d  # finds my Share/Sync2 instances
ls *ly.*/localhost/mnt/SD480GSSDPlus/Dropbox/CAM* -d

#### recover folder
rsync -irtv --delete $rsnapshot/daily.0/localhost/home/jo/.local/share/mail/ $maild

# imagey
jpo  # defined in my $Bash/bashrc-wm
rm -r ~/.cache/sxiv/*
rm -r ~/.thumbnails/normal/*

## scanimage
S 55n 3 <imagefilename> <scanheight>
see $Imagey/Scan.sh

# LanguageTool package
languagetool  # GUI
whereis languagetool

# LanguageTool symlinked
java -jar /usr/share/java/LanguageTool/languagetool-commandline.jar -h
java -jar /usr/share/java/LanguageTool/languagetool-commandline.jar --list  # languages

## version
/usr/share/java/LanguageTool/README.md
java -jar /usr/share/java/LanguageTool/languagetool-commandline.jar --version

# multimedia
~/.config/obs-studio/logs
for t in *.mp3; do aet "$t" 3; done
mediainfo -h | mo
pkill quodlibet

## cmus
$Openbox/cmus-rc.conf
pgrep cmus

### kill
kill -9 "$(pidof cmus)"

#### manually
get the PIDs  ps ax | grep cmus  then for each  kill -9 PID

# networking
cat /etc/hostname
curl ifconfig.co  # IP address
curl ifconfig.co/country
sudo dhcpcd wlwg111v2
sudo ls /var/lib/dhcpcd/
systemctl status nordvpnd.service
xdg-open https://archlinux.org

## Dropbox
dropbox &  # as in  $Openbox/openbox/autostart/autostart
killall dropbox
lsof -c dropbox
pkill dropbox; dropbox &

### conflicted copies
find -name "* conflicted copy*" -exec rm -f {} \;
find -name "*(Copie en conflit de *"

## email
default-release:  find -name "* conflicted copy*" -exec rm -f {} \;

### CLI tools
$Bash/bashrc-clm
grep -r "Georita" *
rsync -irtv --delete $maild/ ~/Arch/maild-$(date '+%Y%m%d%H%M')

#### mutt
$email/muttrc-general
$email/muttrc-account_ftml
$email/muttrc-account_troh
echo "content" | nmz -s "subject" jharr@ftml.net -a <attachment1> -a <attachment2> ...
f => forward
F => toggle important flag (= Star in Gmail)

#### notmuch search
nmse najac date:2022
nmse '"pattern with spaces"'
notmuch search tag:attachment | wc -l
notmuch search tag:fm | wc -l
notmuch search tag:gmail | wc -l
notmuch search tag:trohib | wc -l

#### providors
- orange.fr
- yahoo!mail

#### URLs unclickable by receiver
URLs (such as in an email sent from mutt) unclickable - so better to send to them with Thunderbird

## NetworkManager
nmcli connection delete Jo-X10II
nmcli connection delete cafezoide
nmcli connection up uuid 0b2a10d5-d801-4c46-bfc6-392f6d77cd01
nmcli connection up uuid 667c759d-382a-4875-9021-2258cdba8dad
nmcli connection up uuid 9348d395-9e92-45a5-9b4b-5fc9e7b6a472
nmcli device wifi connect cafezoide password <password>
nmcli device wifi connect Jo-X10II password <password>
sudo grep -r '^psk=' /etc/NetworkManager/system-connections/
sudo ls /etc/NetworkManager/system-connections/
systemctl status NetworkManager
systemctl status NetworkManager-dispatcher

## weather
ansiweather -f 7

### wttr.in
curl wttr.in/London
curl wttr.in/Moscow
curl wttr.in/Salt+Lake+City
wp  # in Paris

# packages
checkupdates
pacfinder
pacman -Qdt  # lists all orphans
pactree -r <package_to_find_depencies_of>
sudo pacman -Rs <packagetoremove>
/var/cache/pacman/pkg/
grep -iE 'installed|upgraded' /var/log/pacman.log | xcol hplip

## most recent installs
expac --timefmt='%Y-%m-%d %T' '%l\t%n' | sort | tail -n 500 > $MACHINE/expac-500-$(date '+%Y%m%d%H%M').log
  then remove dates in vim with  :%s/\H*

## groups
pacman -Qg base-devel  # lists packages installed
pacman -Sg base-devel  # lists all

## list local and remote packages
pacman -Ss <keyword>
pacsearch <keyword>  # better search

## package database locked
pgrep pacman  # to ensure it's not running
sudo rm /var/lib/pacman/db.lck  # delete the stale lock

# pass
pass edit gmail-neomutt
pass cz
~/.password-store

## Gmail API expiry
date -d @$(pass cz/GmailAPI/token-expire)
pass cz/GmailAPI/token-expire

# Rust
cargo version
dym better
rustup update

# scripting
kill -9 "$(pidof perl)"

## Bash
[ -f $T91/parent.lock ] && echo zero file size

### ANSI escape sequences
$ARCHBUILDS/Bash/bashrc-generic
\e[0;34m = Blue
\e[1;34m = Bold Blue
echo ${my_array[@]}
echo -e "\e[1m\e[95m[1m[95m\e[0m"

### tput
"nachoparker"
tput bold; echo hello

#### cat --show-nonprinting
for c in {0..255}; do tput setaf $c; tput setaf $c | cat -v; echo =$c; done
tput setaf 95; tput setaf 95 | cat -v; echo =95

# system
$ARCHBUILDS/etc/doas.conf
$Openbox/openbox/rc/rc.xml
/usr/share/doc/arch-wiki/html/en
bat -A /etc/hosts
bm <command>  # batman - only good in full-screen
cat /proc/cpuinfo
GRUB (GRand Unified Bootloader)
i hier

## groups
cat /etc/group  # list all groups on the system
id jo        # show uid, gid, and groups for jo

## mimeapps
gio mime
handlr -h
handlr get .png
handlr list
~/.config/mimeapps.list

### mimeo
/home/jo/.config/mimeapps.list  # add mimetypes here
mimeo -m <fileToOpen>  # reports mimetype

## monitoring
btop

### BpyTOP
bpytop  # supersedes  bashtop

#### keybinds
h = F1

##### sorting columns
b = left = previous
n = right = next

##### tree view
e toggles it
spacebar toggles open/closed a branch

## sizes
sudo du -h --max-depth=1 /usr
sudo du -h --max-depth=1 /usr/share
sudo du -sh /boot /etc /home /root /usr

## systemd
journalctl --list-boots
journalctl | grep Consumed

### messages, paged
journalctl -b  # for this boot
journalctl -b -1  # for previous boot
journalctl -b -1 -e  # shows end of  -n1000
journalctl -b -1 -r  # newest first
journalctl -b -g 'EFI v'  # shows EFI version

# term
echo $TERM
neofetch
watch -n1 "date '+%D%n%T' | figlet -k"

## colours
bash $lB/colours/256/BR-color256.sh
bash $lB/colours/256/SO-BrunoBronosky.sh
bash $lB/colours/256/SE269077-numbers-ordered.sh
bash $lB/colours/256/SE269077-FHauri.sh
bash $lB/colours/awk-rgb-test.sh
bash $lB/colours/ss64.sh
bash $lB/colours/tripleee+isntn.sh
perl $lB/colours/256/hSATAC-256color.pl
python $lB/colours/256/WoLpH-colortest.py
colorscript -r
terminal-colors  # shows what the terminal can
terminal-colors -l  # with #xxxxxx's
terminal-colors -o  # ANSI escape codes

## FIGlet
figlet Joseph Harriott
figlet(6)

### fonts
ft  # $ARCHBUILDS/Bash/bashrc-generic
showfigfonts > $lB/FIGletFonts.txt; sed -i 's/ \+$//' $lB/FIGletFonts.txt

## termdown
termdown --help | mo
termdown -b 10

## tmux
$tmx/tmux.conf
C-a [ -> copy-mode
C-a ~ -> show-messages
resize -s 65 120  # good for half of ViewSonic VX2025wm
tmux list-keys | grep '~'
tmux list-keys | mo
TMUX(1)
joinp -s 2 [-t 1 ]  -> join-pane, joining pane in window 2 [to that in window 1]

### session window pane
M-PgDn/PgUp -> (= C-a (/) ) previous/next session

#### panes
C-a C-o -> Rotate through the panes
C-a M-1 -> switch to even-horizontal layout
C-a M-2 -> switch to even-vertical layout
C-a M-3 -> switch to main-horizontal layout
C-a M-4 -> switch to main-vertical layout
C-a q -> show numbers
C-a { = swap-pane -U
C-a } = swap-pane -D

#### windows
C-a w -> choose window from a list
M-n -> (= C-a n ) select window n

## urxvt
Alt+s --> urxvt-searchable-scrollback
appres urxvt
rxvt-unicode

## test fonts
Ctrl-Shift-leftClick
gets weird sizes, and doesn't work in tmux
printf '\e]710;%s\007' "xft:Hack:Bold:pixelsize=12"
printf '\e]710;%s\007' "xft:UbuntuMono:Bold:pixelsize=12"
printf '\e]710;%s\007' "xft:Consolas:Bold:pixelsize=12"

## virtual consoles
$TERM is set to 'linux'
can login concurrently to jo
Ctrl+Alt+F2  anywhere brings up getty for virtual console tty2
tput works

# text-wrangling
echo $EDITOR
echo $VISUAL

## CopyQ
bm copyq
pkill copyq
~/.local/share/copyq/copyq/copyq.log

## gVim
gvim --help | mo
gvim -geom 200  # height parameter is omitted as it's having no effect

# windows
xrandr --output DVI-0 --auto --primary --output VGA-0 --auto --left-of DVI-0

## Openbox
$Openbox/openbox/autostart
$Openbox/openbox/schema.pl

### rc
$Openbox/openbox/rc.xml
Alt+Space => show client menu for active window
Ctrl+Alt+arrows => move to desktop
Shift+Alt+arrows => move to desktop, bringing current window along
Win+1 => move the window to monitor 1
Win+2 => move the window to monitor 2
Win+r => Resize
Win+t => last tmux buffer to X11 clipboard
Win+u => urxvt

### tint2
$Openbox/tint2rc
killall -SIGUSR1 tint2  # reloads

